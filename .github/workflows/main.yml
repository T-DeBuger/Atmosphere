name: Build Atmosphère

on:
  # push:
  #   branches: [ main ]
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: devkitpro/devkita64  # ✅ 已内置 switch 构建工具链

    steps:
    - name: Checkout Atmosphère
      uses: actions/checkout@v4
      with:
        ref: main

    - name: Set environment variables
      run: |
        echo "DEVKITPRO=/opt/devkitpro" >> $GITHUB_ENV
        echo "DEVKITARM=/opt/devkitpro/devkitARM" >> $GITHUB_ENV
        echo "DEVKITA64=/opt/devkitpro/devkitA64" >> $GITHUB_ENV
        echo "PATH=/opt/devkitpro/devkitARM/bin:/opt/devkitpro/devkitA64/bin:$PATH" >> $GITHUB_ENV

    - name: Install extra Python deps
      run: |
        apt-get update
        apt-get install -y python3-pip unzip zip
        pip3 install lz4

    - name: Build Atmosphère
      run: |
        make nx_release

    - name: Unzip + Repack atmosphere.zip
      run: |
        release_dir="out/nintendo_nx_arm64_armv8a/release"
        zip_file=$(find "$release_dir" -name "atmosphere-*.zip" | head -n 1)
        echo "Found zip: $zip_file"

        mkdir -p unpacked
        unzip -q "$zip_file" -d unpacked

        inner_dir=$(find unpacked -mindepth 1 -maxdepth 1 -type d | head -n 1)
        cp "$release_dir/fusee.bin" "$inner_dir/"

        cd "$inner_dir"
        zip -rq ../../atmosphere.zip .
        cd -

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        name: Atmosphère Build
        tag: latest
        allowUpdates: true
        commit: main
        token: ${{ secrets.actions_release }}
        body: "Latest Atmosphère build from GitHub Actions"
        artifacts: atmosphere.zip

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.3.2
      with:
        keep_latest: 5
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.actions_release }}
